								DBMS(DAY 2)						
GOOD MORNING 

	DAY 2:-
		1) DATA
		2) HISTORY OF RDBMS
		3) DATA + DBMS = DATABASE
		
		CODD'S RULE : 12 RULES 
		
		ACID : 
			
		DATABASE > SCHEMAS > TABLES > ROWS AND COLUMN > CELLS(DATA)
		
		1) INSTALLED MYSQL (START RUNNING IN OUR WINDOWS SERVICE)
			WINDOWS > RUN  > SERVICES.MSC 
			MYSQL80 - 
			3306 PORT
			
		2) HOW TO CONNECT WITH THE SERVER 
			ITS COMES WITH TWO INTERFACES 
			
				1) MYSQL COMMAND LINE
				2) MYSQL WORKBENCH : UI FRAMEWORK WHICH ALLOWS ME TO VIEW 
						ALL DATABASES,TABLES
						PROVIDE ME A PLACE WHERE I CAN RUN THE QUERIES 
						PROVIDE THE OUTPUT 
						PROVIDE THE LOGS 
						SUGGEESTION
				3) COMMAND LINE OF WINDOWS 
					FOR JAVA - JAVAC , JAVA 
							IT ALWAYS THROWS ERROR 
								NOT RECOGNISED THE COMMANDS 
					FOR MYSQL.EXE 
							IT THROWS ERROR - NOT RECOGNIZED THE COMMAND 
							
					ADDED THE PATH TILL BIN IN THE ENVIORNMENT VARIABLE 
				
					C:\Program Files\MySQL\MySQL Server 8.0\bin

					mysql.exe -u root -p
						* 
							-u username
							-p password

------------------------------------------------------------------------

			HOW TO WORK WITH THE MYSQL PROMPT 
			
				1) VIEW ALL THE DATABASES EXIST IN THE SYSTEM 
						
						SHOW DATABASES;
						
				2) ACCESS THE DATABASE AND NEED TO KNOW ABOUT THE DATABASE 
					WHAT IT CONTAINS 
					
					USE DATABASENAME;
					
				3) IN WHICH DATABASE ARE YOU IN 
					
					SELECT DATABASE();
					
				4) ; IS A TERMINATOR OPERTORS FROM THE COMMAND LINE 

				5) VIEW ALL THE TABLES 
					
					SHOW TABLES;
					
				6) VIEW THE STRUCTURE 
					STRUCTURE : 
							VIRTUAL WAY OF REPRESENTING THE TABLES 
								MEANS ALL THE COLUMNS WITH THEIR DATATYPE AND SOME OTHER INFORMATION
					TABLES : 
						1) ROWS AND COLUMNS 
						2) WITHOUT THIS STRUCTURE, WE ARE NOT ALLOWED TO INSERT ANY DATA IN THE DATABASE 
						3) STRUCTURE : DEFINATION OF THE TABLE 
						
					DESCRIBE / DESC 
					
					DESC TABLENAME;
					DESCRIBE TABLENAME;
					
				7) DATA DICTONARY 
					
						MYSQL - information_schema
							IS TREATED AS DATA DICTONARY 
							
					WHAT EVER YOU DO IN YOUR SCHEMA - EVERY REFERENCE STORE IN THE INFORMATION_SCHEMA 
					
					INFORMATION_SCHAME - READ ACCESS 
					
				8) DATABASE - REFENRECE 
					HRSCHEMA
					SOURCE C:\RAHUL\hrschema.sql

========================================================================

STARTS WITH THE DBMS :-

		DATABASE PROVIDED A LINEAR SYNTAX FOR INTERATING WITH THE DATABASE 
		
		FOR BASIC FUNCTIONS NEED TO BE PEFORMED IN THE DATABASE 
			
				ARE COMES FROM 9 DIFFERENT COMMANDS 
				
		INTRACT 
				THEY TOOK AROUND 2 YEARS TO GENERATE THESE COMMANDS
				TOOK 2 YEARS TO MAKE USERS FEEL FREIENDLY WHILE WORKING WITH THE DATABASES
				
		SQL : STRUCTURED QUERY LANGUAGE 
				THIS LANGUAGE IS COMMAN TO ALL THE RDBMS 
				
			SELECT 
			CREATE 
			ALTER
			DROP
			INSERT
			UPDATE 
			DELETE
			COMMIT 
			ROLLBACK
			
			THEY DIVIDED THESE COMMANDS BASED ON THERE NATURE INTO VARIOUS CATEGORIES
			
			
	FOUR DIFFERENT CATEGORIES :-

		1) DQL : DATA QUERY LANGUAGE 
		
			SELECT 
			
			WHICH IS A VERY POWERFULL COMMAND ONLY AND ONLY 
				USED TO FETCH DATA FROM THE DATABASE 
			IT WON'T EFFECT ANYTHING IN THE DATABASE 
			IT WON'T CHANGE ANYTHING IN THE DATABASE 
				LIKE YOUR DATA , STRUCTURE .....
				
		2) DML : DATA MANIPULATION LANGUAGE 
			
				MANIPULATION : NEED TO TO CHNAGE 
				
				INTERACT WITH THE DATABASE FOR 
				PROVIDING DATA
				MODIFYING THE DATA 
				REMOVING THE DATA 
				
				NEVER EVER TOUCH THE STRUCTURE OF THE TABLE 
				
				IT ALWAYS WORKS WITH THE DATA 
				
				EMPID    EMPNAME  EMPADDRESS EMPMOBILENO 
				102		RAHUL		B1 106		7620987578
				
				* INSERT  - USED TO INSERT NEW RECORD IN THE TABLE
				* UPDATE  - USED TO UPDATE THE EXISTING VALUES 
							LIKE EMPLOYEE E101, SALARY 6000 
							UPDATE SALARY FROM 6000 TO 10000 
				* DELETE  - USED TO REMOVE THE COMPLETE RECORD FROM THE TABLES 
					
		3) DDL : DATA DEFINATION LANGUAGE 
			
					DEFINATION :
						STRUCTURE 
					
					MANIPULATION IN THE STRUTURE OR CREATION OF THE STRUCTRE 
						WILL BE DONE OR EXECUTED BY DDL COMMANDS 
						
				CREATE : 
					USED TO CREATE NEW TABLE IN THE DATABASE 
					
				ALTER : 
					USED TO MODIFY THE EXISTING STRUCTURE 
				
				DROP  : 
					USED TO DROP THE EXISTING STRUCTURE OR TABLES
					
					- DROP : REMOVE THE COMPLETE STRUTURE WITH THE DATA 
						FROM THE DATABASE
					
					
					
		4) DTL :
				DATA TRANSACTIONAL LANGUAGE 
					
					COMMIT 
					
					ROLLBACK 
					
					
		5) DCL : 
				DATA CONTROL LANGUAGE 
					ON SECURITY OF THE DATA 
					
				GRANT : PROVIDE PERMISSION
				
				REVOKE : REMOVE THE PERMISSION
					
==================================================================		
DATABASE : 
		
		CREATE DATABASE DATABASENAME;
		
		CREATE DATABASE DACSTUDENTS;
		
		* ALL SYNTAX ARE CASE INSENSTIVE IN MYSQL 
		

DDL : 
		DATA DEFINATION LANGUAGE 
		
		CREATE : 
		
				ALLOWS ME TO CREATE NEW STRUCTURE 
				
		SYNTAX: 
			
				CREATE TABLE TABLENAME 
				(
				COLUMNNAME DATATYPE,
				COLUMNNAME2 DATATYPE,
				COLUMNNAME3 DATATYPE,
				COLUMNNAME4 DATATYEP
				);
			
	DATATYPE :- 
		
			ARE DEFINING THE COLUMNS WHICH TYPE OF DATA GOING TO INSERT IN THAT PERTICULAR COLUMN 
			
			INT A,B,C;
			STRING VAR1,
			
			SET VAR1 = "RAHUL"
			SET A  = 234
			
		THREE CATEGORIES :- 
			
			1) NUMERIC DATATYPE :-
					USED TO STORE THE NUMBERS 

					TINYINT  : 
							RANGE -128 TO 127 
					ID TINYINT;
	
						IT WONT CONTAINS VALUES OTHER THEN THE REFERENCE RANGE 
							
					SMALLINT : 
							-32768 TILL 32767
					INT : 
						-214748648 TILL 214748647
					BIGINT
						-9223372036854775808 TILL 9223372036854775807
					FLOAT
						FLOAT(4,2) : 
								4 DIGITS OUT OF 4 , 2 ARE PRECISION 
								
							45.34
							344.4
						DOUBLE(5,2)
						
					CREATE TABLE NUMERICDATATYPE
					(
					IT TINYINT,
					ISI SMALLINT,
					II INT,
					IBI BIGINT,
					IFD FLOAT(4,2)
					);
					
					INT(3) - ONLY 3 DIGIT 
					INT(5) - 5 DIGIT 
							
		--- 
			INSERT INTO TABLE VALUES(ALL VALUES SEPERATED WITH COMMA);
			
			INSERT INTO NUMERICDATATYPE VALUES(125,2345,3434434,454545,34.34);
							
			INSERT INTO NUMERICDATATYPE VALUES(456,2345,3434434,454545,34.34);				
							
							
		-- VIEW DATA INSERTED IN THE TABKE 

			SELECT 
				WHICH ALLOWS ME TO VIEW THE DATA FROM THE TABLE 
				
			SELECT * FROM TABLENAME;
			
			SELECT  - KEYWORD
			*  - ALL THE COLUMNS 
			FROM - KEYWORD 
			TABLENAME - TABLE FROM WHICH WE NEED TO FETCH DATA 
			
			------
			
				SHOW WARNINGS;
				
				
		2) STRING DATATYPE 
				WHICH STORES THE STRING VALUES 
				
					* CHAR 1 TO 255 CHARACTERS
						IS A DATATYPE COMES WITH THE SIZE 
						CHAR(5) - ONLY ACCEPT 5 CHARATERS STRING  
						CHAR(2) - ONLY ACCEPT 2 CHARATERS STRING 
						
					** COMES WITH FIXED LENGHT 
						NAME CHAR(20)
							
						NAME = RAHUL

						SYSTEM STORE FULL 20 CHARCTERS FOR RAHUL 
					** BENEFIT IN TERMS OF SEARCH 
						SEARCH ENGINE WORKS FASTER WITH THE SAME LENGHT 
						
				** VARCHAR 1 TO 255 CHARACTERS 
						OF LENGHT 
							255 CHARACTERS
							
					NAME VARCHAR,  - NOT ALLOWED 
					NAME VARCHAR(20) - ITS MEANS THIS COLUMN CAN ACCEPT 20 CHARACTER STRING 
					
					DIFFERENCE - VARCHAR COLUMNS ARE DYNAMIC IN THE SIZE BASED ON THE VALUE INSERTED 
					
					NAME = RAHUL ===== 5
					NAME = NIKHILSARASWAT ==== 14
					
				** TEXT 
					
				
				ENGINE :-
						1) LENGTH 
						2) VALUE 
						
						FIND RAHUL = 
						
						LENGTH = 5 
							
					CHAR : 
						SIZE FIXED 
							COMPARISON OF LENGTH 
								DOES NOT MAKE ANY SENCE 
						
							COLUMN LENGHT 
								START DOING COMPARISON 
							
							NAME@@@@@@@@@@@ 
							RAHUL@@@@@@@@@@ 
							RITESH@@@@@@@@@ 
							NIKHILSARASWAT@
							SONIA@@@@@@@@@@
							
							RAHUL@@@@@@@@@@
							
--------------------IN TERMS OF VARCHAR 
							NAME 
							RAHUL
							RITESH
							NIKHILSARASWAT
							SONIA

							RAHUL 
								PICK FIRST VALUE RAHUL
								CHECK THE LENGTH 5  ALSO 5 
								COMPARE 
								
							PICK SECOND VALUE RITESH 6 
								CONVERT THE COMPARISON STRING 
									RAHUL ---- RAHUL@
									
								COMPARISION WITH THE  
									
				* TEXT : MAXIMUM LENGTH 65535 CHARACTERS 
							SYSTEM DOESN'T ALLOW TO HAVE THESE COLUMNS 
								AS A PRIMARY KEY 
								
	------------------------------------------------------------------

			* DATE 
			
				** DATE : IT STORES DATE IN THE DEFAULT FORMAT OF 
					YYYY-MM-DD 
					
				** DATETIME : IT STORES DATE WITH TIME 
					DEFAULT FORMAT : 
						YYYY-MM-DD HH:MI:SS
						
					MYSQL DEFAULT DATETIME FORMAT 
						2021-07-01 12:23:23
						
					SYSTEM DATA STORAGE FORMAT CAN NOT BE CHANGES 
						WE CAN NOT CHNAGE THE DEFAULT STORAGE FORMAT OF THE DATABASE 
				** TIMESTAMP : 
						DATETIME WITH TIMESTAMP 
							USED WHEN MY SOFTWARE NEED TO ACCESSED AT DIFFERENT GIO GRAHICAL LOCATION WITH DIFFRENT TIME ZONE 
						
				
----------------------------------------------------------------------

DDL :-
		CREATE TABLE TABLENAME
		(
		COLUMNNAME1 DATATYPE,
		COLUMNNAME2 DATATYPE,
		COLUMNNAME3 DATATYPE		
		);
			
		NEW TABLE CONTAINS VARIOUS COLUMNS 
			LIKE EMPID OF INT, EMPNAME STRING, EMPDOB DATETIME, 
			EMPMOBILENO OF INTEGER TYPE 
			
			CREATE TABLE EMPLOYEE 
			(
			EMPID INT,
			EMPNAME VARCHAR(50),
			EMPDOB DATETIME,
			EMPMOBINO BIGINT
			);
			
		INSERT VALUES TO THIS TABLE 
		
		*
		**** STRING AND DATE VALUES MUST COME OR PROVIDE WITH SINGLE QUOTE 
		
		STRINGS AND DATE : ''
		
		INSERT INTO 
		EMPLOYEE 
		VALUES(102,'RITESH','2021-07-01 06:23:23',7620987578);
		
----------------------------------------------------------------------

* CREATE TABLES 
			AT THE TIME OF CREATION 
				1) WE NEED TO DECIDE WHICH COLUMN CONTAINS WHICH VALUE(DATATYPE)
				2) DECIDE WHICH COLUMNS NEED TO BEHAVE WITH RESTRICTION 
					
				REQUIRED CERTAIN COLUMNS WITH CONDITION
				
				RESTRICT END USER TO ENTER VALUES WHICH IS NOT RELEVANT BASED ON YOUR DEFINATION
				
				
		RESTRICTION ON COLUMNS  - TERMS OF DATABASE 
								THESE CALLED AS CONSTRAINTS 
							
	CONSTRAINTS : 
				ARE NOTHING ELSE THE RESCTRICTION 
					
			CREATE TABLE TABLENAME 
				(
				COLUMN1 DATATYPE CONTRAINSTS,
				COLUMN2 DATATYPE CONSTRAINTS
				);
				
CONSTRINTS :- 

		1) PRIMARY KEY :- 
					COMES WITH A DEFINATION / RULES 
					
					* WON'T ALLOW COLUMN MENTIONED AS PRIMARY KEY 
						TO HAVE NULL VALUES 
					
						NO NULL VALUES 
					
					* IT'S VALUES ARE UNIQUE 
					USER NOT ALLOWED TO INSERT DUPLICATE VALUES IN THIS COLUMN 
					
					* EACH TABLE WILL ONLY HAVE ONE PRIMARY KEY 
					
					* SYSTEM AUTOMATICALLY CREATES INDEXES FOR THIS COLUMN 
					
					
			SYNTAX :-

				CREATE TABLE PRIMARYKEYEXAMPLE
				(
				EMPID INT PRIMARY KEY,
				EMPNAME VARCHAR(20)
				);
				
				INSERT INTO PRIMARYKEYEXAMPLE VALUES(101,'RAHUL');
				INSERT INTO PRIMARYKEYEXAMPLE VALUES(101,'RITESH');
				
				
				
				CREATE TABLE PRIMARYKEYEXAMPLE1
				(
				EMPID INT PRIMARY KEY,
				EMPNAME VARCHAR(20) PRIMARY KEY
				);
				
				
		* NO NULL VALUES
		* NO DUPLICATE VALUES 
		* SINGLE PRIMARY KEY PER TABLE 
		
				
				
		INSERT INTO PRIMARYKEYEXAMPLE VALUES(NULL,'RAHUL');		
					
		ANOTHER SYNTAX OF INSERT 

		INSERT INTO TABLEBAME(COLUMNNAME SEPERATED WITH COMMA) VALUES(SAME SEQUEANCE DEFINE VALUES SEPERATED WITH COMMA);
		
		INSERT INTO PRIMARYKEYEXAMPLE(EMPNAME) VALUES ('RAHUL')
					
		INSERT INTO PRIMARYKEYEXAMPLE(EMPID) VALUES (103);

		INSERT INTO PRIMARYKEYEXAMPLE(EMPID,EMPNAME) VALUES (103);
		
		2) ENHANCEMENT OF PRIMARY KEY RULE 
				SINGLE PRIMARY KEY IN THE TABLE 
				
		THERE MAY A SCENARIO WHHERE WE HAVE A TABLE WITHOUT ANY SIGNLE COLUMN BEHAVE LIKE A PRIMARY 
			
			
			
			EMPNAME EMPFATHERNAME EMPDOB EMPSALARY EMPADD 
			
		
		SYSTEMS ALLOWS ME TO HAVE A CONSOLIDATE PRIMARY KEY 
		
		CONSOLIDATE PRIMARY KEY :
						CREATE PRIMARY KEY WITH MULTIPLE COLUMNS 
						
			SYNTAX FOR CONSOLIDATE PRIMARY KEY 
			
				CREATE TABLE CONSOLIDATEPRIMARYKEY 
				(
				EMPNAME VARCHAR(20),
				EMPFATHERNAME VARCHAR(20),
				EMPDOB DATETIME,
				EMPSAL INT,
				EMPADD VARCHAR(200),
				PRIMARY KEY (EMPNAME,EMPFATHERNAME,EMPDOB)
				);
				
			INSERT INTO 
			CONSOLIDATEPRIMARYKEY 
			VALUES('RAHUL','SUBHASH','1987-02-02 12:12:12',23434,'VIMAN NAGAR');
			
			INSERT INTO 
			CONSOLIDATEPRIMARYKEY 
			VALUES('RAHUL','SUBHASH','1989-02-02 12:12:12',23434,'VIMAN NAGAR');
			
			INSERT INTO 
			CONSOLIDATEPRIMARYKEY 
			VALUES('RAHUL','NIKHIL','1987-02-02 12:12:12',23434,'VIMAN NAGAR');
			
	-----------------------------------------------------------------

	2) UNIQUE 
			: 
				* NO DUPLICATE VALUE 
				* HAVE MULTIPLE UNIQUE CONSTRAINT 
				* UNIQUE COLUMN ACCEPT NULL VALUE 
				
			**** NULL , NULL , NULL 
			MULTIPLE NULL IN THE COLUMN IS ALLOWED 
				BECAUSE OF THE CODD'S RULE TO BAHAVE SEPERATLY FOR NULL 
				
				NULL - DATA MISSING, DATA NOT KNOWN , DATA IS NULL 
				
				NULL IT SELF CONTAINS A UNIQUE VALUE 
				MEANS EVERY NULL IS DIFFERENT THEN THE OTHER NULL 
				
				NULL = NULL CAN NOT COMPARE , IT ALWAYS RETRUN FALSE 
				
				CREATE TABLE UNIQUEEXAMPLE
				(
				ID INT PRIMARY KEY, 
				NAME VARCHAR(20),
				MOBNO BIGINT UNIQUE,
				EMPREF VARCHAR(20) UNIQUE 
				);
			
			
			INSERT INTO UNIQUEEXAMPLE VALUES(102,'RAHUL',7620987534,'NIKHIL');
				
			INSERT INTO UNIQUEEXAMPLE(ID,MOBNO,NAME) VALUE(103,9879879898,'RITESH')	

------------------------------------------------------------------------

3) NOT NULL : 

			* COLUMN DOESN'T ALLOW NULL VALUE 
			
			CREATE TABLE NULLEXAMPLE
			(
			ID INT,
			NAME VARCHAR(20) NOT NULL 
			);

			INSERT INTO NULLEXAMPLE(ID) VALUES(101)

4) NOW - IF YOU NEED TO SAY, YOU NEED TO ACHIVE A MULTIPLE PRIMARY KEY 
		FOR YOUR TABLE 
			
				BASED ON THE DEFINATION 
					PRIMARY : 
							UNIQUE 
							NOT NULL 
							
			** 
				CREATE TABLE MULTIPLEKEYEXAMPLE
				(
				ID INT PRIMARY KEY,
				NAME VARCHAR(20),
				MOBILENUMBER BIGINT UNIQUE NOT NULL
				);
							
 ==============================TODAY==================================